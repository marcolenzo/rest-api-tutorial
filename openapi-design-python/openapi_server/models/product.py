# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Product(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, name=None, price=None, description=None, last_updated_on=None):  # noqa: E501
        """Product - a model defined in OpenAPI

        :param id: The id of this Product.  # noqa: E501
        :type id: str
        :param name: The name of this Product.  # noqa: E501
        :type name: str
        :param price: The price of this Product.  # noqa: E501
        :type price: float
        :param description: The description of this Product.  # noqa: E501
        :type description: str
        :param last_updated_on: The last_updated_on of this Product.  # noqa: E501
        :type last_updated_on: datetime
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'price': float,
            'description': str,
            'last_updated_on': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'price': 'price',
            'description': 'description',
            'last_updated_on': 'lastUpdatedOn'
        }

        self._id = id
        self._name = name
        self._price = price
        self._description = description
        self._last_updated_on = last_updated_on

    @classmethod
    def from_dict(cls, dikt) -> 'Product':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Product of this Product.  # noqa: E501
        :rtype: Product
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Product.

        Product identifier  # noqa: E501

        :return: The id of this Product.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Product.

        Product identifier  # noqa: E501

        :param id: The id of this Product.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Product.

        Product name  # noqa: E501

        :return: The name of this Product.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Product.

        Product name  # noqa: E501

        :param name: The name of this Product.
        :type name: str
        """

        self._name = name

    @property
    def price(self):
        """Gets the price of this Product.

        Product price  # noqa: E501

        :return: The price of this Product.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this Product.

        Product price  # noqa: E501

        :param price: The price of this Product.
        :type price: float
        """

        self._price = price

    @property
    def description(self):
        """Gets the description of this Product.

        Product description  # noqa: E501

        :return: The description of this Product.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Product.

        Product description  # noqa: E501

        :param description: The description of this Product.
        :type description: str
        """

        self._description = description

    @property
    def last_updated_on(self):
        """Gets the last_updated_on of this Product.

        Timestamp of last product update  # noqa: E501

        :return: The last_updated_on of this Product.
        :rtype: datetime
        """
        return self._last_updated_on

    @last_updated_on.setter
    def last_updated_on(self, last_updated_on):
        """Sets the last_updated_on of this Product.

        Timestamp of last product update  # noqa: E501

        :param last_updated_on: The last_updated_on of this Product.
        :type last_updated_on: datetime
        """

        self._last_updated_on = last_updated_on
